{{define "setup-bootloader"}}
## Create initial ramdisk

First, edit `/etc/mkinitcpio.conf`. Order is important.

Add `i915` for Intel graphics.

```diff
MODULES=(i915)
```

Add the `encrypt` hook so we can unlock the LUKS partition.

```diff
-HOOKS=(base udev autodetect modconf block filesystems keyboard fsck)
+HOOKS=(base udev autodetect modconf block encrypt filesystems keyboard fsck)
```

Build the image.

```
mkinitcpio -p linux
```

## Configure EFISTUB

Install `efibootmgr`.

```
pacman -S efibootmgr
```

The firmware will be in charge of booting Linux.

```
efibootmgr --create --disk /dev/nvme0n1 --part 1 --label 'Arch Linux' \
	--loader /vmlinuz-linux \
	--unicode "cryptdevice=UUID=$(blkid -s UUID -o value /dev/nvme0n1p2):cryptroot root=/dev/mapper/cryptroot rootfstype=ext4 rw initrd=/intel-ucode.img initrd=/initramfs-linux.img i915.enable_guc=2"
```
{{end}}
